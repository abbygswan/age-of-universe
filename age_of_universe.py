# -*- coding: utf-8 -*-
"""age-of-universe

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GTy4o9TbV0M2m_Y620GaYzw4vY6FDOaC
"""

#import some math utilitiess
import math
from pylab import *
#
#imoport plotting utilities#
import matplotlib.pyplot as plts
#
H_0=7.253*10**-11

def dadT(Omega_m0, Omega_rad0, Omega_L0, Omega_0, a):
    return math.sqrt((Omega_m0/a)+(Omega_rad0/(a**2))+((a**2)*Omega_L0)+(1-Omega_0))

def a_of_t(Omega_m0, Omega_rad0, Omega_L0, Omega_0,T_0, delta_T):
    a = 1
    T=T_0
    a_list = [ a ]#This is a list of times, now containing just one time, 0.0 sec
    T_list = [ T ]#This is a list of nuclei numbers, contianing just N_0
    a_ana = [ a ]  #Another list of nuclei numbers, contianing just N_0

    while (a>0):
        a=a-dadT(Omega_m0, Omega_rad0, Omega_L0, Omega_0, a)* delta_T
        T=T-delta_T
        T_list.append(T/H_0)
        a_list.append(a)

    print(-T/H_0/10**9)

    plt.plot(T_list,a_list, linestyle= "dashed", color = "green", label = "numerical 2") #plots the numerically calculated N
    plt.xlabel('T')
    plt.ylabel('a')
    plt.legend()
    plt.savefig("a_of_t.pdf", dpi=150) #saves the plot
    show() #shows the plot


a_of_t(0.3, 8.4e-5, 0.7, 1,0, 0.001)

